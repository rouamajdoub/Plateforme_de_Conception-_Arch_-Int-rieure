const Payment = require("../models/paymentModel");
const Order = require("../models/Order");

// üìå Cr√©er un paiement
exports.createPayment = async (req, res) => {
  try {
    const { userId, orderId, amount, paymentMethod, transactionId } = req.body;

    // V√©rifier si la commande existe
    const order = await Order.findById(orderId);
    if (!order) {
      return res.status(404).json({ message: "Commande non trouv√©e" });
    }

    // Cr√©er un nouveau paiement
    const payment = new Payment({
      userId,
      orderId,
      amount,
      paymentMethod,
      transactionId,
      status: "pending", 
    });

    await payment.save();
    res.status(201).json({ message: "Paiement cr√©√© avec succ√®s", payment });
  } catch (error) {
    res.status(500).json({ message: "Erreur lors du paiement", error });
  }
};

// üìå R√©cup√©rer un paiement par ID
exports.getPaymentById = async (req, res) => {
  try {
    const payment = await Payment.findById(req.params.id).populate("userId orderId");
    if (!payment) {
      return res.status(404).json({ message: "Paiement introuvable" });
    }
    res.status(200).json(payment);
  } catch (error) {
    res.status(500).json({ message: "Erreur lors de la r√©cup√©ration du paiement", error });
  }
};

// üìå Mettre √† jour le statut d'un paiement
exports.updatePaymentStatus = async (req, res) => {
  try {
    const { status } = req.body;
    const payment = await Payment.findById(req.params.id);
    if (!payment) {
      return res.status(404).json({ message: "Paiement introuvable" });
    }

    payment.status = status;
    await payment.save();
    res.status(200).json({ message: "Statut du paiement mis √† jour", payment });
  } catch (error) {
    res.status(500).json({ message: "Erreur lors de la mise √† jour du paiement", error });
  }
};

// üìå Supprimer un paiement
exports.deletePayment = async (req, res) => {
  try {
    const payment = await Payment.findByIdAndDelete(req.params.id);
    if (!payment) {
      return res.status(404).json({ message: "Paiement introuvable" });
    }
    res.status(200).json({ message: "Paiement supprim√© avec succ√®s" });
  } catch (error) {
    res.status(500).json({ message: "Erreur lors de la suppression du paiement", error });
  }
};
